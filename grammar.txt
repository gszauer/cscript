
program -> (declaration)*;

declaration = varDeclStatement | funDeclStatement;
varDeclStatement -> IDENTIFIER IDENTIFIER ("=" expression)? ";";
funDeclStatement -> IDENTIFIER IDENTIFIER "(" funParamaters? ")" blockStatement;

statement -> expressionStatement | printStatement | varDeclStatement | blockStatement;
expressionStatement -> expression ";";
printStatement -> "print" "(" expression? ")" ";";
blockStatement -> "{" statement* "}";
returnStatement -> "return" expression? ";";

expression -> assignment;
assignment -> IDENTIFIER "=" assignment | add_sub;
add_sub -> mul_div (("+" | "-") mul_div)*;
mul_divv -> unary (("*" | "/") unary)*;
unary -> ("!" | "-") unary | call;
call -> primary (" callArguments? ")";
primary -> NUMBER | IDENTIFIER | CHAR | "true" | "false" | "(" expression ")";

funParamaters -> IDENTIFIER IDENTIFIER ("," IDENTIFIER IDENTIFIER )*;
callArguments -> expression ("," expression)*;